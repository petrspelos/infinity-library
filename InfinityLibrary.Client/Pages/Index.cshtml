@using InfinityLibrary.Entities
@using InfinityLibrary.Shared
@using SimpleJson
@inject HttpClient Http
@page "/"

<CascadingValue Value="Users">
    <SimpleUsersList></SimpleUsersList>
</CascadingValue>

@if (Users is null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var user in Users)
        {
            <li>@user.FirstName @user.LastName</li>
        }
    </ul>
}

@if (Books is null)
{
    <p>Loading...</p>
}
else
{
    <ul>
        @foreach (var book in Books)
        {
            <hr />
            <li>
                @if (book.ThumbnailUrl == "None")
                {
                    <img src="https://pbs.twimg.com/profile_images/600060188872155136/st4Sp6Aw_400x400.jpg" height="100" width="80" />
                }
                else
                {
                    <img src="@book.ThumbnailUrl" height="100" width="80" />
                }

                <b>@book.Title</b> by @book.Author
            </li>
        }
    </ul>
}

@functions
{

protected User[] Users { get; set; }
protected Book[] Books { get; set; }

protected override async Task OnInitAsync()
{
    var usersJson = await Http.GetStringAsync("api/Users");
    Users = SimpleJson.DeserializeObject<User[]>(usersJson, new UserSerializationStrategy());

    var booksJson = await Http.GetStringAsync("api/Books");
    Books = SimpleJson.DeserializeObject<Book[]>(booksJson, new BookSerializationStrategy());
}

}
